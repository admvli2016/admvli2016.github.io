{"pages":[],"posts":[{"title":"自适应布局","text":"自适应布局实现有许多方式，下面仅列举我使用过的几种 一般而言，自适应布局常在PC端上应用，常常设置一个最小显示宽度 min-width，小于这个宽度不显示（浏览器窗口只能缩小到此宽度）或者浏览器底部出现横向滚动条 CSS3 zoom 属性 注意仅对 px 单位有效，对 rem 单位无效 123456&lt;!-- index.html --&gt;&lt;body&gt; &lt;script&gt; // js 部分代码如下 &lt;/script&gt;&lt;/body&gt; 123456789101112131415161718192021222324252627282930313233window.onload = function () { document.body.style.zoom = 'normal'; // 避免 zoom 尺寸叠加 let ratio = document.body.clientWidth / 1904; document.body.style.zoom = ratio;};// 函数防抖(function () { var throttle = function (type, name, obj) { obj = obj || window; var running = false; var func = function () { if (running) { return; } running = true; requestAnimationFrame(function () { obj.dispatchEvent(new CustomEvent(name)); running = false; }); }; obj.addEventListener(type, func); }; // 初始化 - 可以初始化任何事件 throttle('resize', 'optimizedResize');})();window.addEventListener('optimizedResize', function () { document.body.style.zoom = 'normal'; let ratio = document.body.clientWidth / 1904; document.body.style.zoom = ratio;}); CSS3 scale 属性 12345678&lt;!-- index.html --&gt;&lt;!-- 缩放原点 --&gt;&lt;body style=&quot;transform-origin: 0 0;&quot;&gt; &lt;script&gt; var radio = document.body.clientWidth / 1920; document.body.style.transform = `scale(${radio},${radio})` &lt;/script&gt;&lt;/body&gt; JS 计算缩放比例，对所有元素按照缩放比例重新赋值（实际不可用）12345678910111213let ratio = document.body.clientWidth / 1920;let element = document.getElementById('element');element.style.height = Math.round(618 * ratio) + 'px';element.style.width = Math.round(1365 * ratio) + 'px';element.style.marginTop = Math.round(-30 * ratio) + 'px';element.style.marginLeft = Math.round(65 * ratio) + 'px';// element 元素在 1920*1080 分辨率时的布局样式如下：// {// height: 618px;// width: 1365px;// margin-top: -30px;// margin-left: 65px;// } OminiBrowser 项目使用的自适应布局方式（兼容不同浏览器）结合了1和2方法，可兼容大部分浏览器，但是对于引入的 Element UI、vis 等插件会有影响，比如 el-select下拉框位置漂移、图表不跟随此逻辑缩放等，这些问题需要自己再去做兼容处理 123456&lt;!-- index.html --&gt;&lt;body style=&quot;transform-origin: 0 0;&quot;&gt; &lt;script type=&quot;text/javascript&quot;&gt; // js 部分代码如下 &lt;/script&gt;&lt;/body&gt; 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556var client = (function () { // 呈现引擎 var engine = { ie: 0, edge: 0, gecko: 0, webkit: 0, khtml: 0, opera: 0 }; // 检测呈现引擎、平台和设备 var ua = navigator.userAgent; // 通过检测用户代理字符串 if (window.opera) { engine.opera = parseFloat(engine.ver); } else if (/AppleWebKit\\/(\\S+)/.test(ua) &amp;&amp; ua.indexOf('Edge/') === -1) { engine.webkit = parseFloat(engine.ver); } else if (/KHTML\\/(\\S+)/.test(ua) &amp;&amp; ua.indexOf('Edge/') === -1) { engine.khtml = parseFloat(engine.ver); } else if (/rv:([^)]+)\\) Gecko\\/\\d{8}/.test(ua) &amp;&amp; ua.indexOf('Edge/') === -1) { engine.gecko = parseFloat(engine.ver); } else if (!!window.ActiveXObject || 'ActiveXObject' in window) { engine.ie = parseFloat(engine.ver); } else if (ua.indexOf('Edge/') !== -1) { engine.edge = parseFloat(engine.ver); } return engine;})();// 1920 这里也并没有去掉滚动条的宽度，正确的宽度应该是 1920 - 16 = 1904// screen.width 取的是屏幕的像素宽度，等同于 window.screen.widthvar zoomRatio = 1920 / screen.width; Object.keys(client).forEach(function (key) { if (client[key] !== 0) { if (key === 'webkit') { // chrome, safari document.documentElement.style.zoom = 1 / zoomRatio; } else if (key === 'ie') { // ie document.body.style.zoom = 1 / zoomRatio; document.body.style.width = 100 * zoomRatio + '%'; // 设置为 0.9，是考虑到浏览器导航栏、书签栏的高度以及操作系统底部任务栏的高度，页面实际的高度并没有 1080 document.body.style.height = 0.9 * (1080 / zoomRatio) + 'px'; // 设置 body 的高度 document.documentElement.style.height = 0.9 * (1080 / zoomRatio) + 'px'; // 设置 html 元素的高度 document.documentElement.style.overflowX = 'hidden'; // 设置横向溢出隐藏 } else if (key === 'edge') { // edge document.body.style.zoom = 1 / zoomRatio; document.documentElement.style.height = 0.9 * (1080 / zoomRatio) + 'px'; document.documentElement.style.overflowX = 'hidden'; } else if (key === 'gecko') { // firefox document.body.style.transform = 'scale(' + 1 / zoomRatio + ',' + 1 / zoomRatio + ')'; document.body.style.width = 100 * zoomRatio + '%'; document.documentElement.style.height = 0.9 * (1080 / zoomRatio) + 'px'; } }}); rem 布局 rem 布局的关键点在于 html { font-size: 1vw } 即将 html 元素的 font-size 设置为 1vw，因为 rem 是基于页面根元素（即 html 元素）的 font-size 计算的，默认情况下，1rem = html 的 font-size 值；在这里就是 1rem = 1vw，因此当视宽 vw 发生变化时，以 rem 做单位的元素也会相应的变化 浮动布局与 rem 布局对比 浮动布局代码如下： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455&lt;!DOCTYPE html&gt;&lt;html lang=&quot;zh-CN&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;https://necolas.github.io/normalize.css/latest/normalize.css&quot;&gt; &lt;title&gt;浮动布局&lt;/title&gt; &lt;style&gt; .box { float: left; width: 400px; margin: 50px 25px; } .box p { width: 100%; } &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div class=&quot;box box1&quot;&gt; &lt;p&gt; 1，软件部培训总结撰写 √ 已完成 2，自己笔记本shenguyun文件夹整理 √ 已完成 3，面试经验总结（最后一个）√ 已完成 4，将各项目需要在53上面发版的步骤总结一下 差 Manage 发版内容，等明确了53 Manage 存放的地址加上即可 ui-app-android 项目配置文件路径 5，vivo手机文件同步（需要在同一wifi环境下安装手机驱动） &lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;box box2&quot;&gt; &lt;p&gt; 1，总结一下 8 月份暂未完成的任务 √ 已完成 2，自己笔记本上需要下载的东西下载好 公司电脑和自己的笔记本数据同步 1，软件部培训总结撰写 回去再写 √ 已完成 9/5 2，自己笔记本shenguyun文件夹整理 √ 已完成 9/5 3，chrome 书签备份 √ 4，公司文件夹shenguyun同步 √ 3，面试经验总结（最后一个）√ 已完成 9/5 4，浏览器书签内容整理 5，将各项目需要在53上面发版的步骤总结一下 &lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;box box3&quot;&gt; &lt;p&gt; 苹果应用市场审核意见：您的应用程序使用第三方登录服务，但不提供Apple登录。使用第三方登录服务进行帐户身份验证的应用程序需要向用户提供使用Apple登录的同等选项。 下一步请修改您的应用程序，以提供与Apple登录作为帐户身份验证的等效选项。 将微信登陆按钮隐藏后去审核，审核通过之后，通过热更新将按钮换回来 上架审核时，可以给界面上的微信登录按钮 设置一个定时器里面设置微信登录按钮隐藏，以便通过审核 &lt;/p&gt; &lt;/div&gt; &lt;/body&gt;&lt;/html&gt; 页面表现如下： 1366x768 1200x473 1080x473 ipad pro 1024x1366 960x473 ipad 768X1024 iphone6/7/8/plus 414x736 rem 布局代码如下： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960&lt;!DOCTYPE html&gt;&lt;html lang=&quot;zh-CN&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;https://necolas.github.io/normalize.css/latest/normalize.css&quot;&gt; &lt;title&gt;rem 自适应布局&lt;/title&gt; &lt;style&gt; html { font-size: 1vw; } .box { float: left; width: 29rem; margin: 4rem 2rem 0rem 2rem; } .box p { width: 100%; /* font-size: 1rem; */ /* 继承了html元素的font-size值 大致为 13.66px */ } &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div class=&quot;box box1&quot;&gt; &lt;p&gt; 1，软件部培训总结撰写 √ 已完成 2，自己笔记本shenguyun文件夹整理 √ 已完成 3，面试经验总结（最后一个）√ 已完成 4，将各项目需要在53上面发版的步骤总结一下 差 Manage 发版内容，等明确了53 Manage 存放的地址加上即可 ui-app-android 项目配置文件路径 5，vivo手机文件同步（需要在同一wifi环境下安装手机驱动） &lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;box box2&quot;&gt; &lt;p&gt; 1，总结一下 8 月份暂未完成的任务 √ 已完成 2，自己笔记本上需要下载的东西下载好 公司电脑和自己的笔记本数据同步 1，软件部培训总结撰写 回去再写 √ 已完成 9/5 2，自己笔记本shenguyun文件夹整理 √ 已完成 9/5 3，chrome 书签备份 √ 4，公司文件夹shenguyun同步 √ 3，面试经验总结（最后一个）√ 已完成 9/5 4，浏览器书签内容整理 5，将各项目需要在53上面发版的步骤总结一下 &lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;box box3&quot;&gt; &lt;p&gt; 苹果应用市场审核意见：您的应用程序使用第三方登录服务，但不提供Apple登录。使用第三方登录服务进行帐户身份验证的应用程序需要向用户提供使用Apple登录的同等选项。 下一步请修改您的应用程序，以提供与Apple登录作为帐户身份验证的等效选项。 将微信登陆按钮隐藏后去审核，审核通过之后，通过热更新将按钮换回来 上架审核时，可以给界面上的微信登录按钮 设置一个定时器里面设置微信登录按钮隐藏，以便通过审核 &lt;/p&gt; &lt;/div&gt; &lt;/body&gt;&lt;/html&gt; 1366x768 1200x473 1080x473 ipad pro 1024x1366 960x473 ipad 768X1024 iphone6/7/8/plus 414x736 对比效果很明显，rem 布局在自适应上更具优势","link":"/2021/12/05/%E8%87%AA%E9%80%82%E5%BA%94%E5%B8%83%E5%B1%80/"}],"tags":[{"name":"布局方式","slug":"布局方式","link":"/tags/%E5%B8%83%E5%B1%80%E6%96%B9%E5%BC%8F/"},{"name":"HTML&amp;&amp;CSS","slug":"HTML-CSS","link":"/tags/HTML-CSS/"}],"categories":[{"name":"前端基础","slug":"前端基础","link":"/categories/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80/"}]}